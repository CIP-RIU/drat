{
    "collab_server" : "",
    "contents" : "\n##' This helper function create a new repository, creates and checks\n##' out \\sQuote{gh-pages} branch and fills it with the required path.\n##' \n##' Currently only \\sQuote{src/contrib} for source repositories is\n##' supported.\n##'\n##' This function is still undergoing development and polish and may\n##' change in subsequent versions.\n##'\n##' @title Intialize a git repo for drat\n##' @param name A character variable with the name the new repository,\n##' the default is \\dQuote{drat}.\n##' @param basepath A character variable with path to the directory in\n##' which the new repository is to be created. The default value is\n##' \\dQuote{\"~/git\"}.\n##' @return The function is invoked for its side-effects and only\n##' returns \\code{NULL} invisibly.\n##' @author Dirk Eddelbuettel\ninitRepo <- function(name=\"drat\", basepath=\"~/git\") {\n\n    haspkg <- requireNamespace(\"git2r\", quietly=TRUE)\n    if (!haspkg) stop(\"The 'initRepo' function requires the 'git2r' packages.\", call.=FALSE)\n    \n    dir <- file.path(basepath, name)\n    if (file.exists(dir)) stop(\"Directory '\", dir, \"' already exists.\", call.=FALSE)\n\n    dir.create(dir)\n    repo <- git2r::init(dir)\n\n    writeLines(\"## Drat Repo\", file.path(dir, \"README.md\"))\n    git2r::add(repo, \"README.md\")\n    cmt <- git2r::commit(repo, \"Initial Commit\")\n\n    git2r::checkout(repo, \"gh-pages\", create=TRUE)\n    \n    dir.create(file.path(dir, \"src\"))\n    dir.create(file.path(dir, \"src\", \"contrib\"))\n    ## create binary path as well ?\n\n    invisible(NULL)\n}\n",
    "created" : 1503418816404.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1939421462",
    "id" : "F13E2A5A",
    "lastKnownWriteTime" : 1503333227,
    "last_content_update" : 1503333227,
    "path" : "D:/HIDAP_PACAKGES/GITHUB/drat/R/initRepo.R",
    "project_path" : "R/initRepo.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}